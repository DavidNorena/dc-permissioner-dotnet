// <auto-generated />
using System;
using Dabitco.Permissioneer.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dabitco.Permissioneer.TestAPI.Migrations
{
    [DbContext(typeof(PermissioneerDbContext))]
    partial class PermissioneerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("permissioneer")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dabitco.Permissioneer.Domain.Entities.PermissionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("Permission", "permissioneer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f9ec9c70-3c35-4b6d-b82a-5bbd4b43e4a3"),
                            Name = "Permissioneer.Roles.Read"
                        },
                        new
                        {
                            Id = new Guid("05adbf0d-1b79-4777-93de-28474e9ba19e"),
                            Name = "Permissioneer.Roles.Write"
                        },
                        new
                        {
                            Id = new Guid("cdfd4277-e7a7-4813-9058-e109fc6a7d0c"),
                            Name = "Permissioneer.Roles.Delete"
                        },
                        new
                        {
                            Id = new Guid("d6372504-f1f8-4c41-8b1c-7d62f181c92d"),
                            Name = "Permissioneer.Permissions.Read"
                        },
                        new
                        {
                            Id = new Guid("2069215b-f033-4a43-a8c7-09594a5e191b"),
                            Name = "Permissioneer.Permissions.Write"
                        },
                        new
                        {
                            Id = new Guid("5dace4cf-a662-4192-bd7b-3bc30a06f4c0"),
                            Name = "Permissioneer.Permissions.Delete"
                        },
                        new
                        {
                            Id = new Guid("19c407cf-cf12-4b81-8552-e985398ce50d"),
                            Name = "Permissioneer.Permissions.Assign"
                        },
                        new
                        {
                            Id = new Guid("2552f6e4-a731-4428-bca5-816d4d00b3f9"),
                            Name = "Permissioneer.Permissions.Unassign"
                        });
                });

            modelBuilder.Entity("Dabitco.Permissioneer.Domain.Entities.RoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role", "permissioneer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsActive = true,
                            IsSystem = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("1a307ea6-fbe1-4048-a447-af7057faa5c5"),
                            IsActive = true,
                            IsSystem = true,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Dabitco.Permissioneer.Domain.Entities.RolePermissionEntity", b =>
                {
                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAllowed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.HasKey("PermissionId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermission", "permissioneer");

                    b.HasData(
                        new
                        {
                            PermissionId = new Guid("f9ec9c70-3c35-4b6d-b82a-5bbd4b43e4a3"),
                            RoleId = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("05adbf0d-1b79-4777-93de-28474e9ba19e"),
                            RoleId = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("cdfd4277-e7a7-4813-9058-e109fc6a7d0c"),
                            RoleId = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("d6372504-f1f8-4c41-8b1c-7d62f181c92d"),
                            RoleId = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("2069215b-f033-4a43-a8c7-09594a5e191b"),
                            RoleId = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("5dace4cf-a662-4192-bd7b-3bc30a06f4c0"),
                            RoleId = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("19c407cf-cf12-4b81-8552-e985398ce50d"),
                            RoleId = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("2552f6e4-a731-4428-bca5-816d4d00b3f9"),
                            RoleId = new Guid("f2d82c53-f6be-4095-8a98-bd62c12842c4"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("f9ec9c70-3c35-4b6d-b82a-5bbd4b43e4a3"),
                            RoleId = new Guid("1a307ea6-fbe1-4048-a447-af7057faa5c5"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("d6372504-f1f8-4c41-8b1c-7d62f181c92d"),
                            RoleId = new Guid("1a307ea6-fbe1-4048-a447-af7057faa5c5"),
                            IsAllowed = true,
                            IsSystem = true
                        },
                        new
                        {
                            PermissionId = new Guid("cdfd4277-e7a7-4813-9058-e109fc6a7d0c"),
                            RoleId = new Guid("1a307ea6-fbe1-4048-a447-af7057faa5c5"),
                            IsAllowed = false,
                            IsSystem = true
                        });
                });

            modelBuilder.Entity("Dabitco.Permissioneer.Domain.Entities.RolePermissionEntity", b =>
                {
                    b.HasOne("Dabitco.Permissioneer.Domain.Entities.PermissionEntity", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dabitco.Permissioneer.Domain.Entities.RoleEntity", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Dabitco.Permissioneer.Domain.Entities.PermissionEntity", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Dabitco.Permissioneer.Domain.Entities.RoleEntity", b =>
                {
                    b.Navigation("RolePermissions");
                });
#pragma warning restore 612, 618
        }
    }
}
